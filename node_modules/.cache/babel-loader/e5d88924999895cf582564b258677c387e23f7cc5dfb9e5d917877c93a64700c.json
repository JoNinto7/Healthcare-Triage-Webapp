{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maram\\\\GitHub\\\\CS5329-Fall2024-Project\\\\healthcare-triage\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Sidebar from '../components/Sidebar';\nimport axios from 'axios';\nimport { Card, CardContent, Typography, Grid, Button, Modal, Box } from '@mui/material';\nimport { Line } from 'react-chartjs-2';\nimport { Pie } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [completedTasksCount, setCompletedTasksCount] = useState(0);\n  const [averageWaitTime, setAverageWaitTime] = useState(0);\n  const [totalCost, setTotalCost] = useState(0);\n  const [alerts, setAlerts] = useState([]);\n  const [taskDistribution, setTaskDistribution] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  useEffect(() => {\n    fetchMetrics();\n    fetchAlerts();\n  }, []);\n  const fetchMetrics = async () => {\n    try {\n      const tasksResponse = await axios.get('http://localhost:5000/tasks');\n      const completedTasksResponse = await axios.get('http://localhost:5000/completed-tasks');\n      const fetchedTasks = tasksResponse.data;\n      const fetchedCompletedTasks = completedTasksResponse.data;\n      const totalWaitTime = fetchedTasks.reduce((sum, task) => sum + task.time, 0);\n      const totalCost = fetchedTasks.reduce((sum, task) => sum + task.cost, 0);\n\n      // Calculate task distribution by urgency level\n      const distribution = fetchedTasks.reduce((acc, task) => {\n        acc[task.urgency] = (acc[task.urgency] || 0) + 1;\n        return acc;\n      }, {});\n      setTasks(fetchedTasks);\n      setCompletedTasksCount(fetchedCompletedTasks.length);\n      setAverageWaitTime((totalWaitTime / fetchedTasks.length).toFixed(2) || 0);\n      setTotalCost(totalCost || 0);\n      setTaskDistribution(distribution);\n    } catch (error) {\n      console.error('Error fetching metrics:', error);\n    }\n  };\n  const fetchAlerts = async () => {\n    try {\n      setLoading(true); // Start loading\n      const response = await axios.get('http://localhost:5000/alerts');\n      setAlerts(response.data);\n      setLoading(false); // Stop loading\n    } catch (error) {\n      setLoading(false); // Stop loading even on error\n      console.error('Error fetching alerts:', error);\n    }\n  };\n  const fetchPatientDetails = async patientId => {\n    try {\n      const response = await axios.get('http://localhost:5000/patients');\n      const patient = response.data.find(p => p['Patient ID'] === patientId);\n      setSelectedPatient(patient);\n    } catch (error) {\n      console.error('Error fetching patient details:', error);\n    }\n  };\n  const handleCompleteTask = async taskId => {\n    try {\n      setAlerts(prevAlerts => prevAlerts.filter(alert => alert.id !== taskId));\n      await axios.delete(`http://localhost:5000/tasks/${taskId}`);\n      fetchAlerts();\n      fetchMetrics();\n    } catch (error) {\n      console.error('Error completing task:', error);\n    }\n  };\n  const handleCloseModal = () => {\n    setSelectedPatient(null);\n  };\n\n  // Data for Line Chart\n  const lineChartData = {\n    labels: Object.keys(taskDistribution).map(urgency => `Urgency ${urgency}`),\n    datasets: [{\n      label: 'Cases by Urgency Level',\n      data: Object.values(taskDistribution),\n      borderColor: 'rgba(75,192,192,1)',\n      fill: false,\n      tension: 0.1\n    }]\n  };\n\n  // Data for Pie Chart\n  const pieChartData = {\n    labels: ['Completed Tasks', 'Remaining Tasks'],\n    datasets: [{\n      data: [completedTasksCount, tasks.length],\n      backgroundColor: ['#36A2EB', '#FF6384'],\n      hoverBackgroundColor: ['#36A2EB', '#FF6384']\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      style: {\n        flexGrow: 1,\n        padding: '20px',\n        marginTop: 64,\n        boxSizing: 'border-box'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Healthcare Triage Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Total Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: tasks.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Completed Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: completedTasksCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Average Wait Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [averageWaitTime, \" minutes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Total Cost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"$\", totalCost]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        sx: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Cases by Urgency Level\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                data: lineChartData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Tasks Overview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Pie, {\n                data: pieChartData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Alerts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Loading alerts...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: alerts.map((alert, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            variant: \"outlined\",\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                component: \"div\",\n                children: [\"Patient ID: \", alert.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Task Type:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 23\n                }, this), \" \", alert.type]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Urgency Level:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 23\n                }, this), \" \", alert.urgency]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Estimated Time:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 23\n                }, this), \" \", alert.time, \" minutes\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Cost:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 23\n                }, this), \" $\", alert.cost]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Elapsed Time:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 23\n                }, this), \" \", Math.floor((new Date() - new Date(alert.arrival)) / 60000), \" minutes\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  marginTop: '10px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  onClick: () => handleCompleteTask(alert.id),\n                  children: \"Mark as Completed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: \"secondary\",\n                  onClick: () => fetchPatientDetails(alert.id),\n                  children: \"View Patient Card\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"Kz9kNnt8sHAUA3JleDMVIiTF1VI=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","axios","Card","CardContent","Typography","Grid","Button","Modal","Box","Line","Pie","jsxDEV","_jsxDEV","Dashboard","_s","tasks","setTasks","completedTasksCount","setCompletedTasksCount","averageWaitTime","setAverageWaitTime","totalCost","setTotalCost","alerts","setAlerts","taskDistribution","setTaskDistribution","loading","setLoading","selectedPatient","setSelectedPatient","fetchMetrics","fetchAlerts","tasksResponse","get","completedTasksResponse","fetchedTasks","data","fetchedCompletedTasks","totalWaitTime","reduce","sum","task","time","cost","distribution","acc","urgency","length","toFixed","error","console","response","fetchPatientDetails","patientId","patient","find","p","handleCompleteTask","taskId","prevAlerts","filter","alert","id","delete","handleCloseModal","lineChartData","labels","Object","keys","map","datasets","label","values","borderColor","fill","tension","pieChartData","backgroundColor","hoverBackgroundColor","style","display","children","fileName","_jsxFileName","lineNumber","columnNumber","flexGrow","padding","marginTop","boxSizing","justifyContent","marginBottom","container","spacing","sx","item","xs","md","variant","index","component","type","Math","floor","Date","arrival","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/maram/GitHub/CS5329-Fall2024-Project/healthcare-triage/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Sidebar from '../components/Sidebar';\nimport axios from 'axios';\nimport { Card, CardContent, Typography, Grid, Button, Modal, Box } from '@mui/material';\nimport { Line } from 'react-chartjs-2';\nimport { Pie } from 'react-chartjs-2';\n\nconst Dashboard = () => {\n  const [tasks, setTasks] = useState([]);\n  const [completedTasksCount, setCompletedTasksCount] = useState(0);\n  const [averageWaitTime, setAverageWaitTime] = useState(0);\n  const [totalCost, setTotalCost] = useState(0);\n  const [alerts, setAlerts] = useState([]);\n  const [taskDistribution, setTaskDistribution] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [selectedPatient, setSelectedPatient] = useState(null);\n\n  useEffect(() => {\n    fetchMetrics();\n    fetchAlerts();\n  }, []);\n\n  const fetchMetrics = async () => {\n    try {\n      const tasksResponse = await axios.get('http://localhost:5000/tasks');\n      const completedTasksResponse = await axios.get('http://localhost:5000/completed-tasks');\n\n      const fetchedTasks = tasksResponse.data;\n      const fetchedCompletedTasks = completedTasksResponse.data;\n\n      const totalWaitTime = fetchedTasks.reduce((sum, task) => sum + task.time, 0);\n      const totalCost = fetchedTasks.reduce((sum, task) => sum + task.cost, 0);\n\n      // Calculate task distribution by urgency level\n      const distribution = fetchedTasks.reduce((acc, task) => {\n        acc[task.urgency] = (acc[task.urgency] || 0) + 1;\n        return acc;\n      }, {});\n\n      setTasks(fetchedTasks);\n      setCompletedTasksCount(fetchedCompletedTasks.length);\n      setAverageWaitTime((totalWaitTime / fetchedTasks.length).toFixed(2) || 0);\n      setTotalCost(totalCost || 0);\n      setTaskDistribution(distribution);\n    } catch (error) {\n      console.error('Error fetching metrics:', error);\n    }\n  };\n\n  const fetchAlerts = async () => {\n    try {\n      setLoading(true); // Start loading\n      const response = await axios.get('http://localhost:5000/alerts');\n      setAlerts(response.data);\n      setLoading(false); // Stop loading\n    } catch (error) {\n      setLoading(false); // Stop loading even on error\n      console.error('Error fetching alerts:', error);\n    }\n  };\n\n  const fetchPatientDetails = async (patientId) => {\n    try {\n      const response = await axios.get('http://localhost:5000/patients');\n      const patient = response.data.find((p) => p['Patient ID'] === patientId);\n      setSelectedPatient(patient);\n    } catch (error) {\n      console.error('Error fetching patient details:', error);\n    }\n  };\n\n  const handleCompleteTask = async (taskId) => {\n    try {\n      setAlerts((prevAlerts) => prevAlerts.filter((alert) => alert.id !== taskId));\n      await axios.delete(`http://localhost:5000/tasks/${taskId}`);\n      fetchAlerts();\n      fetchMetrics();\n    } catch (error) {\n      console.error('Error completing task:', error);\n    }\n  };\n\n  const handleCloseModal = () => {\n    setSelectedPatient(null);\n  };\n\n  // Data for Line Chart\n  const lineChartData = {\n    labels: Object.keys(taskDistribution).map((urgency) => `Urgency ${urgency}`),\n    datasets: [\n      {\n        label: 'Cases by Urgency Level',\n        data: Object.values(taskDistribution),\n        borderColor: 'rgba(75,192,192,1)',\n        fill: false,\n        tension: 0.1,\n      },\n    ],\n  };\n\n  // Data for Pie Chart\n  const pieChartData = {\n    labels: ['Completed Tasks', 'Remaining Tasks'],\n    datasets: [\n      {\n        data: [completedTasksCount, tasks.length],\n        backgroundColor: ['#36A2EB', '#FF6384'],\n        hoverBackgroundColor: ['#36A2EB', '#FF6384'],\n      },\n    ],\n  };\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <Sidebar />\n      <main\n        style={{\n          flexGrow: 1,\n          padding: '20px',\n          marginTop: 64,\n          boxSizing: 'border-box',\n        }}\n      >\n        <h1>Healthcare Triage Dashboard</h1>\n        <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '20px' }}>\n          <div>\n            <h3>Total Tasks</h3>\n            <p>{tasks.length}</p>\n          </div>\n          <div>\n            <h3>Completed Tasks</h3>\n            <p>{completedTasksCount}</p>\n          </div>\n          <div>\n            <h3>Average Wait Time</h3>\n            <p>{averageWaitTime} minutes</p>\n          </div>\n          <div>\n            <h3>Total Cost</h3>\n            <p>${totalCost}</p>\n          </div>\n        </div>\n\n        <Grid container spacing={2} sx={{ marginBottom: '20px' }}>\n          <Grid item xs={12} md={6}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\">Cases by Urgency Level</Typography>\n                <Line data={lineChartData} />\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\">Tasks Overview</Typography>\n                <Pie data={pieChartData} />\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n\n        <h2>Alerts</h2>\n        {loading ? (\n          <Typography>Loading alerts...</Typography>\n        ) : (\n          <Grid container spacing={2}>\n            {alerts.map((alert, index) => (\n              <Grid item xs={12} md={6} key={index}>\n                <Card variant=\"outlined\">\n                  <CardContent>\n                    <Typography variant=\"h6\" component=\"div\">\n                      Patient ID: {alert.id}\n                    </Typography>\n                    <Typography>\n                      <strong>Task Type:</strong> {alert.type}\n                    </Typography>\n                    <Typography>\n                      <strong>Urgency Level:</strong> {alert.urgency}\n                    </Typography>\n                    <Typography>\n                      <strong>Estimated Time:</strong> {alert.time} minutes\n                    </Typography>\n                    <Typography>\n                      <strong>Cost:</strong> ${alert.cost}\n                    </Typography>\n                    <Typography>\n                      <strong>Elapsed Time:</strong> {Math.floor((new Date() - new Date(alert.arrival)) / 60000)} minutes\n                    </Typography>\n                    <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: '10px' }}>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => handleCompleteTask(alert.id)}\n                      >\n                        Mark as Completed\n                      </Button>\n                      <Button\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        onClick={() => fetchPatientDetails(alert.id)}\n                      >\n                        View Patient Card\n                      </Button>\n                    </div>\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}