{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maram\\\\GitHub\\\\CS5329-Fall2024-Project\\\\healthcare-triage\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Sidebar from '../components/Sidebar';\nimport axios from 'axios';\nimport { Card, CardContent, Typography, Grid, Button, Modal, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [completedTasksCount, setCompletedTasksCount] = useState(0);\n  const [averageWaitTime, setAverageWaitTime] = useState(0);\n  const [totalCost, setTotalCost] = useState(0);\n  const [alerts, setAlerts] = useState([]);\n  const [taskDistribution, setTaskDistribution] = useState({});\n  const [loading, setLoading] = useState(false); // Add loading state\n  const [selectedPatient, setSelectedPatient] = useState(null); // For displaying patient details\n\n  useEffect(() => {\n    fetchMetrics();\n    fetchAlerts();\n  }, []);\n  const fetchMetrics = async () => {\n    try {\n      const tasksResponse = await axios.get('http://localhost:5000/tasks');\n      const completedTasksResponse = await axios.get('http://localhost:5000/completed-tasks');\n      const fetchedTasks = tasksResponse.data;\n      const fetchedCompletedTasks = completedTasksResponse.data;\n      const totalWaitTime = fetchedTasks.reduce((sum, task) => sum + task.time, 0);\n      const totalCost = fetchedTasks.reduce((sum, task) => sum + task.cost, 0);\n\n      // Calculate task distribution by urgency level\n      const distribution = fetchedTasks.reduce((acc, task) => {\n        acc[task.urgency] = (acc[task.urgency] || 0) + 1;\n        return acc;\n      }, {});\n      setTasks(fetchedTasks);\n      setCompletedTasksCount(fetchedCompletedTasks.length);\n      setAverageWaitTime((totalWaitTime / fetchedTasks.length).toFixed(2) || 0);\n      setTotalCost(totalCost || 0);\n      setTaskDistribution(distribution);\n    } catch (error) {\n      console.error('Error fetching metrics:', error);\n    }\n  };\n  const fetchAlerts = async () => {\n    try {\n      setLoading(true); // Start loading\n      const response = await axios.get('http://localhost:5000/alerts');\n      setAlerts(response.data);\n      setLoading(false); // Stop loading\n    } catch (error) {\n      setLoading(false); // Stop loading even on error\n      console.error('Error fetching alerts:', error);\n    }\n  };\n  const handleCompleteTask = async taskId => {\n    try {\n      // Optimistic update: remove the task from alerts immediately\n      setAlerts(prevAlerts => prevAlerts.filter(alert => alert.id !== taskId));\n\n      // Complete the specific task in the backend\n      await axios.delete(`http://localhost:5000/tasks/${taskId}`);\n\n      // Fetch new alerts and metrics after the task is completed\n      fetchAlerts();\n      fetchMetrics();\n    } catch (error) {\n      console.error('Error completing task:', error);\n    }\n  };\n  const handlePatientClick = async patientId => {\n    try {\n      const response = await axios.get('http://localhost:5000/patients');\n      const patient = response.data.find(p => p['Patient ID'] === patientId);\n      setSelectedPatient(patient);\n    } catch (error) {\n      console.error('Error fetching patient details:', error);\n    }\n  };\n  const handleCloseModal = () => {\n    setSelectedPatient(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      style: {\n        flexGrow: 1,\n        padding: '20px',\n        marginTop: 64,\n        boxSizing: 'border-box'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Healthcare Triage Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Total Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: tasks.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Completed Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: completedTasksCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Average Wait Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [averageWaitTime, \" minutes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Total Cost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"$\", totalCost]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Task Distribution by Urgency\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        sx: {\n          marginBottom: '20px'\n        },\n        children: Object.keys(taskDistribution).map(urgency => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            variant: \"outlined\",\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                component: \"div\",\n                children: [\"Urgency Level \", urgency]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: [\"Number of Patients: \", taskDistribution[urgency]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)\n        }, urgency, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Alerts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Loading alerts...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: alerts.map((alert, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            variant: \"outlined\",\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                style: {\n                  color: 'blue',\n                  cursor: 'pointer',\n                  textDecoration: 'underline'\n                },\n                onClick: () => handlePatientClick(alert.id),\n                children: [\"Patient ID: \", alert.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Task Type:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 23\n                }, this), \" \", alert.type]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Urgency Level:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 23\n                }, this), \" \", alert.urgency]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Estimated Time:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 23\n                }, this), \" \", alert.time, \" minutes\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Cost:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 23\n                }, this), \" $\", alert.cost]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Elapsed Time:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 23\n                }, this), \" \", Math.floor((new Date() - new Date(alert.arrival)) / 60000), \" minutes\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: () => handleCompleteTask(alert.id),\n                sx: {\n                  mt: 2\n                },\n                children: \"Mark as Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        open: !!selectedPatient,\n        onClose: handleCloseModal,\n        \"aria-labelledby\": \"patient-details-title\",\n        \"aria-describedby\": \"patient-details-description\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            width: 400,\n            bgcolor: 'background.paper',\n            borderRadius: '8px',\n            boxShadow: 24,\n            p: 4\n          },\n          children: selectedPatient ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              id: \"patient-details-title\",\n              variant: \"h6\",\n              component: \"h2\",\n              gutterBottom: true,\n              children: \"Patient Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              id: \"patient-details-description\",\n              sx: {\n                mt: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Patient ID:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this), \" \", selectedPatient['Patient ID'], \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 80\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this), \" \", selectedPatient['Patient Name'], \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 76\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Age:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this), \" \", selectedPatient.Age, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 63\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Condition:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this), \" \", selectedPatient['Emergency Type'], \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 83\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"ESI Level:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this), \" \", selectedPatient['ESI Level'], \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 78\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Check-In Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this), \" \", selectedPatient['Patient Check-In Time']]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleCloseModal,\n              variant: \"contained\",\n              color: \"primary\",\n              sx: {\n                mt: 3,\n                display: 'block',\n                ml: 'auto',\n                mr: 'auto'\n              },\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"Kz9kNnt8sHAUA3JleDMVIiTF1VI=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","axios","Card","CardContent","Typography","Grid","Button","Modal","Box","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","tasks","setTasks","completedTasksCount","setCompletedTasksCount","averageWaitTime","setAverageWaitTime","totalCost","setTotalCost","alerts","setAlerts","taskDistribution","setTaskDistribution","loading","setLoading","selectedPatient","setSelectedPatient","fetchMetrics","fetchAlerts","tasksResponse","get","completedTasksResponse","fetchedTasks","data","fetchedCompletedTasks","totalWaitTime","reduce","sum","task","time","cost","distribution","acc","urgency","length","toFixed","error","console","response","handleCompleteTask","taskId","prevAlerts","filter","alert","id","delete","handlePatientClick","patientId","patient","find","p","handleCloseModal","style","display","children","fileName","_jsxFileName","lineNumber","columnNumber","flexGrow","padding","marginTop","boxSizing","justifyContent","marginBottom","container","spacing","sx","Object","keys","map","item","xs","sm","md","variant","component","index","color","cursor","textDecoration","onClick","type","Math","floor","Date","arrival","mt","open","onClose","position","top","left","transform","width","bgcolor","borderRadius","boxShadow","gutterBottom","Age","ml","mr","_c","$RefreshReg$"],"sources":["C:/Users/maram/GitHub/CS5329-Fall2024-Project/healthcare-triage/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Sidebar from '../components/Sidebar';\nimport axios from 'axios';\nimport { Card, CardContent, Typography, Grid, Button, Modal, Box } from '@mui/material';\n\nconst Dashboard = () => {\n  const [tasks, setTasks] = useState([]);\n  const [completedTasksCount, setCompletedTasksCount] = useState(0);\n  const [averageWaitTime, setAverageWaitTime] = useState(0);\n  const [totalCost, setTotalCost] = useState(0);\n  const [alerts, setAlerts] = useState([]);\n  const [taskDistribution, setTaskDistribution] = useState({});\n  const [loading, setLoading] = useState(false); // Add loading state\n  const [selectedPatient, setSelectedPatient] = useState(null); // For displaying patient details\n\n  useEffect(() => {\n    fetchMetrics();\n    fetchAlerts();\n  }, []);\n\n  const fetchMetrics = async () => {\n    try {\n      const tasksResponse = await axios.get('http://localhost:5000/tasks');\n      const completedTasksResponse = await axios.get('http://localhost:5000/completed-tasks');\n\n      const fetchedTasks = tasksResponse.data;\n      const fetchedCompletedTasks = completedTasksResponse.data;\n\n      const totalWaitTime = fetchedTasks.reduce((sum, task) => sum + task.time, 0);\n      const totalCost = fetchedTasks.reduce((sum, task) => sum + task.cost, 0);\n\n      // Calculate task distribution by urgency level\n      const distribution = fetchedTasks.reduce((acc, task) => {\n        acc[task.urgency] = (acc[task.urgency] || 0) + 1;\n        return acc;\n      }, {});\n\n      setTasks(fetchedTasks);\n      setCompletedTasksCount(fetchedCompletedTasks.length);\n      setAverageWaitTime((totalWaitTime / fetchedTasks.length).toFixed(2) || 0);\n      setTotalCost(totalCost || 0);\n      setTaskDistribution(distribution);\n    } catch (error) {\n      console.error('Error fetching metrics:', error);\n    }\n  };\n\n  const fetchAlerts = async () => {\n    try {\n      setLoading(true); // Start loading\n      const response = await axios.get('http://localhost:5000/alerts');\n      setAlerts(response.data);\n      setLoading(false); // Stop loading\n    } catch (error) {\n      setLoading(false); // Stop loading even on error\n      console.error('Error fetching alerts:', error);\n    }\n  };\n\n  const handleCompleteTask = async (taskId) => {\n    try {\n      // Optimistic update: remove the task from alerts immediately\n      setAlerts((prevAlerts) => prevAlerts.filter((alert) => alert.id !== taskId));\n\n      // Complete the specific task in the backend\n      await axios.delete(`http://localhost:5000/tasks/${taskId}`);\n\n      // Fetch new alerts and metrics after the task is completed\n      fetchAlerts();\n      fetchMetrics();\n    } catch (error) {\n      console.error('Error completing task:', error);\n    }\n  };\n\n  const handlePatientClick = async (patientId) => {\n    try {\n      const response = await axios.get('http://localhost:5000/patients');\n      const patient = response.data.find((p) => p['Patient ID'] === patientId);\n      setSelectedPatient(patient);\n    } catch (error) {\n      console.error('Error fetching patient details:', error);\n    }\n  };\n\n  const handleCloseModal = () => {\n    setSelectedPatient(null);\n  };\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <Sidebar />\n      <main\n        style={{\n          flexGrow: 1,\n          padding: '20px',\n          marginTop: 64,\n          boxSizing: 'border-box',\n        }}\n      >\n        <h1>Healthcare Triage Dashboard</h1>\n        <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '20px' }}>\n          <div>\n            <h3>Total Tasks</h3>\n            <p>{tasks.length}</p>\n          </div>\n          <div>\n            <h3>Completed Tasks</h3>\n            <p>{completedTasksCount}</p>\n          </div>\n          <div>\n            <h3>Average Wait Time</h3>\n            <p>{averageWaitTime} minutes</p>\n          </div>\n          <div>\n            <h3>Total Cost</h3>\n            <p>${totalCost}</p>\n          </div>\n        </div>\n\n        <h2>Task Distribution by Urgency</h2>\n        <Grid container spacing={2} sx={{ marginBottom: '20px' }}>\n          {Object.keys(taskDistribution).map((urgency) => (\n            <Grid item xs={12} sm={6} md={4} key={urgency}>\n              <Card variant=\"outlined\">\n                <CardContent>\n                  <Typography variant=\"h6\" component=\"div\">\n                    Urgency Level {urgency}\n                  </Typography>\n                  <Typography>\n                    Number of Patients: {taskDistribution[urgency]}\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n\n        <h2>Alerts</h2>\n        {loading ? (\n          <Typography>Loading alerts...</Typography>\n        ) : (\n          <Grid container spacing={2}>\n            {alerts.map((alert, index) => (\n              <Grid item xs={12} md={6} key={index}>\n                <Card variant=\"outlined\">\n                  <CardContent>\n                    <Typography\n                      style={{ color: 'blue', cursor: 'pointer', textDecoration: 'underline' }}\n                      onClick={() => handlePatientClick(alert.id)}\n                    >\n                      Patient ID: {alert.id}\n                    </Typography>\n                    <Typography>\n                      <strong>Task Type:</strong> {alert.type}\n                    </Typography>\n                    <Typography>\n                      <strong>Urgency Level:</strong> {alert.urgency}\n                    </Typography>\n                    <Typography>\n                      <strong>Estimated Time:</strong> {alert.time} minutes\n                    </Typography>\n                    <Typography>\n                      <strong>Cost:</strong> ${alert.cost}\n                    </Typography>\n                    <Typography>\n                      <strong>Elapsed Time:</strong> {Math.floor((new Date() - new Date(alert.arrival)) / 60000)} minutes\n                    </Typography>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={() => handleCompleteTask(alert.id)}\n                      sx={{ mt: 2 }}\n                    >\n                      Mark as Completed\n                    </Button>\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        )}\n\n        {/* Patient Details Modal */}\n        <Modal\n          open={!!selectedPatient}\n          onClose={handleCloseModal}\n          aria-labelledby=\"patient-details-title\"\n          aria-describedby=\"patient-details-description\"\n        >\n          <Box\n            sx={{\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)',\n              width: 400,\n              bgcolor: 'background.paper',\n              borderRadius: '8px',\n              boxShadow: 24,\n              p: 4,\n            }}\n          >\n            {selectedPatient ? (\n              <>\n                <Typography id=\"patient-details-title\" variant=\"h6\" component=\"h2\" gutterBottom>\n                  Patient Details\n                </Typography>\n                <Typography id=\"patient-details-description\" sx={{ mt: 2 }}>\n                  <strong>Patient ID:</strong> {selectedPatient['Patient ID']} <br />\n                  <strong>Name:</strong> {selectedPatient['Patient Name']} <br />\n                  <strong>Age:</strong> {selectedPatient.Age} <br />\n                  <strong>Condition:</strong> {selectedPatient['Emergency Type']} <br />\n                  <strong>ESI Level:</strong> {selectedPatient['ESI Level']} <br />\n                  <strong>Check-In Time:</strong> {selectedPatient['Patient Check-In Time']}\n                </Typography>\n                <Button\n                  onClick={handleCloseModal}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  sx={{ mt: 3, display: 'block', ml: 'auto', mr: 'auto' }}\n                >\n                  Close\n                </Button>\n              </>\n            ) : (\n              <Typography>Loading...</Typography>\n            )}\n          </Box>\n        </Modal>\n      </main>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}